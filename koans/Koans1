package beginner;
import com.sandwich.koan.Koan;

import static com.sandwich.koan.constant.KoanConstant;

public class Koans{

    @Koan public void fullAnd(){
        int i = 1;
        if (true & (++i < 8)) i = i +1;
        assertEquals(i, 3);
    }
     @Koan 
    public void shortCircuitAnd() { 
        int i = 1; 
        if (true && (i < -28)) i = i + 1; 
        assertEquals(i, 1);     }  

    @Koan 
    public void aboutXOR() { 
        int i = 1; 
        int a = 6; 
        if ((a < 9) ^ false) i = i + 1; 
        assertEquals(i, 2);     }  
    @Koan 
    public void dontMistakeEqualsForEqualsEquals() { 
        int i = 1; 
        boolean a = false; 
        if (a = true) i++; 
        assertEquals(a, true); 
        assertEquals(i, 2); 

        @Koan 
        public void aboutBitShiftingRightShift() { 
            int rightShift = 8; 
            rightShift = rightShift >> 1; 
            assertEquals(rightShift, 4);     }  

        @Koan     public void aboutBitShiftingLeftShift() { 
            int leftShift = 0x80000000;
        leftShift = leftShift << 1; 
            assertEquals(leftShift, 0);

}
